version: "3"

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      args:
        VARIANT: 3.9
        INSTALL_NODE: "true"
        NODE_VERSION: "lts/*"
        USER_UID: 1000
        USER_GID: 1000

    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - DEBUG=True
      - PY_IGNORE_IMPORTMISMATCH=1

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:db

    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

    volumes:
      # Mounts the project folder to '/workspace'. The target path inside the container
      # should match what your application expects. In this case, the compose file is
      # in a sub-folder, so you will mount '..'. You would then reference this path as the
      # 'workspaceFolder' in '.devcontainer/devcontainer.json' so VS Code starts here.
      - ..:/workspace:cached

  db:
    image: kartoza/postgis:latest
    restart: unless-stopped
    volumes:
      - ck_postgres_db:/var/lib/postgresql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DBNAME=postgres
      - POSTGRES_HOSTNAME=postgres
      - POSTGRES_PORT=5432

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

volumes:
  ck_postgres_db: {}
